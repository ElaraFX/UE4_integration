OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_normal_bump
param	float	tex_mult_spin	1		%read{145,145} %write{2147483647,-1}
param	float	tex_bump_spin	1		%read{9,9} %write{2147483647,-1}
param	float	tex_normal_map_alpha	1		%read{1,1} %write{2147483647,-1}
param	color	tex_normal_map	0.5 0.5 1		%read{0,34} %write{2147483647,-1}
param	float	tex_bump_map_alpha	1		%read{2147483647,-1} %write{2147483647,-1}
param	color	tex_bump_map	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	vector	tex_bump_map_bump	0 0 0		%read{9,9} %write{2147483647,-1}
param	int	tex_normal_map_isnull	0		%read{30,30} %write{2147483647,-1}
param	int	tex_bump_map_isnull	0		%read{5,5} %write{2147483647,-1}
param	int	tex_map1on	1		%read{27,27} %write{2147483647,-1}
param	int	tex_map2on	1		%read{2,2} %write{2147483647,-1}
param	int	tex_method	0		%read{91,140} %write{2147483647,-1}
param	int	tex_flipred	0		%read{10,58} %write{2147483647,-1}
param	int	tex_flipgreen	0		%read{15,63} %write{2147483647,-1}
param	int	tex_swap_rg	0		%read{20,68} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{0,0}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{1,1}
oparam	vector	result_bump	0 0 0		%read{12,146} %write{9,146}
global	normal	N	%read{87,87} %write{2147483647,-1}
global	vector	dPdu	%read{96,96} %write{2147483647,-1}
global	vector	dPdv	%read{97,97} %write{2147483647,-1}
local	float	___370_t	%read{2147483647,-1} %write{22,22}
local	color	___371_s	%read{46,83} %write{34,74}
local	float	___371_texture_gamma	%read{37,37} %write{35,36}
local	float	___374_t	%read{2147483647,-1} %write{70,70}
local	vector	___371_p	%read{93,143} %write{78,142}
local	vector	___371_frontNormal	%read{90,143} %write{87,90}
local	vector	___376_tangent	%read{99,123} %write{96,96}
local	vector	___376_binormal	%read{102,126} %write{97,97}
local	vector	___376_tempNormal	%read{134,134} %write{109,133}
local	vector	___371_perturb	%read{144,144} %write{143,143}
const	int	$const1	1		%read{2,140} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{4,8} %write{3,7}
const	int	$const2	0		%read{3,122} %write{2147483647,-1}
temp	int	$tmp3	%read{6,6} %write{5,5}
temp	int	$tmp4	%read{7,7} %write{6,6}
temp	int	$tmp5	%read{11,11} %write{10,10}
const	float	$const3	1		%read{13,66} %write{2147483647,-1}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{14,14} %write{13,13}
temp	int	$tmp8	%read{16,16} %write{15,15}
temp	float	$tmp9	%read{18,18} %write{17,17}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	int	$tmp11	%read{21,21} %write{20,20}
temp	float	$tmp12	%read{24,24} %write{23,23}
temp	float	$tmp13	%read{26,26} %write{25,25}
temp	int	$tmp14	%read{28,28} %write{27,27}
temp	int	$tmp15	%read{29,33} %write{28,32}
temp	int	$tmp16	%read{31,31} %write{30,30}
temp	int	$tmp17	%read{32,32} %write{31,31}
temp	int	$tmp18	%read{2147483647,-1} %write{36,36}
const	string	$const4	"options"		%read{36,36} %write{2147483647,-1}
const	string	$const5	"texture_gamma"		%read{36,36} %write{2147483647,-1}
temp	float	$tmp19	%read{39,56} %write{37,37}
const	string	$const6	"ei_degamma"		%read{38,38} %write{2147483647,-1}
const	float	$const7	0		%read{39,55} %write{2147483647,-1}
temp	int	$tmp20	%read{40,40} %write{39,39}
temp	int	$tmp21	%read{41,45} %write{40,44}
temp	int	$tmp22	%read{43,43} %write{42,42}
temp	int	$tmp23	%read{44,44} %write{43,43}
temp	float	$tmp24	%read{49,49} %write{48,48}
temp	float	$tmp25	%read{48,48} %write{47,47}
temp	float	$tmp26	%read{47,47} %write{46,46}
temp	float	$tmp27	%read{53,53} %write{52,52}
temp	float	$tmp28	%read{52,52} %write{51,51}
temp	float	$tmp29	%read{51,51} %write{50,50}
temp	float	$tmp30	%read{57,57} %write{56,56}
temp	float	$tmp31	%read{56,56} %write{55,55}
const	int	$const8	2		%read{54,135} %write{2147483647,-1}
temp	float	$tmp32	%read{55,55} %write{54,54}
temp	int	$tmp33	%read{59,59} %write{58,58}
temp	float	$tmp34	%read{61,61} %write{60,60}
temp	float	$tmp35	%read{62,62} %write{61,61}
temp	int	$tmp36	%read{64,64} %write{63,63}
temp	float	$tmp37	%read{66,66} %write{65,65}
temp	float	$tmp38	%read{67,67} %write{66,66}
temp	int	$tmp39	%read{69,69} %write{68,68}
temp	float	$tmp40	%read{72,72} %write{71,71}
temp	float	$tmp41	%read{74,74} %write{73,73}
const	float	$const9	2		%read{77,85} %write{2147483647,-1}
temp	float	$tmp42	%read{76,76} %write{75,75}
const	float	$const10	0.5		%read{76,84} %write{2147483647,-1}
temp	float	$tmp43	%read{77,77} %write{76,76}
temp	float	$tmp44	%read{78,78} %write{77,77}
temp	float	$tmp45	%read{80,80} %write{79,79}
temp	float	$tmp46	%read{81,81} %write{80,80}
temp	float	$tmp47	%read{82,82} %write{81,81}
temp	float	$tmp48	%read{84,84} %write{83,83}
temp	float	$tmp49	%read{85,85} %write{84,84}
temp	float	$tmp50	%read{86,86} %write{85,85}
temp	int	$tmp51	%read{89,89} %write{88,88}
temp	int	$tmp52	%read{92,92} %write{91,91}
temp	float	$tmp53	%read{94,94} %write{93,93}
temp	float	$tmp54	%read{95,95} %write{94,94}
temp	float	$tmp55	%read{100,100} %write{98,98}
temp	float	$tmp56	%read{100,100} %write{99,99}
temp	float	$tmp57	%read{104,104} %write{100,100}
temp	float	$tmp58	%read{103,103} %write{101,101}
temp	float	$tmp59	%read{103,103} %write{102,102}
temp	float	$tmp60	%read{104,104} %write{103,103}
temp	float	$tmp61	%read{108,108} %write{104,104}
temp	float	$tmp62	%read{107,107} %write{105,105}
temp	float	$tmp63	%read{107,107} %write{106,106}
temp	float	$tmp64	%read{108,108} %write{107,107}
temp	float	$tmp65	%read{109,109} %write{108,108}
temp	float	$tmp66	%read{112,112} %write{110,110}
temp	float	$tmp67	%read{112,112} %write{111,111}
temp	float	$tmp68	%read{116,116} %write{112,112}
temp	float	$tmp69	%read{115,115} %write{113,113}
temp	float	$tmp70	%read{115,115} %write{114,114}
temp	float	$tmp71	%read{116,116} %write{115,115}
temp	float	$tmp72	%read{120,120} %write{116,116}
temp	float	$tmp73	%read{119,119} %write{117,117}
temp	float	$tmp74	%read{119,119} %write{118,118}
temp	float	$tmp75	%read{120,120} %write{119,119}
temp	float	$tmp76	%read{121,121} %write{120,120}
temp	float	$tmp77	%read{124,124} %write{122,122}
temp	float	$tmp78	%read{124,124} %write{123,123}
temp	float	$tmp79	%read{128,128} %write{124,124}
temp	float	$tmp80	%read{127,127} %write{125,125}
temp	float	$tmp81	%read{127,127} %write{126,126}
temp	float	$tmp82	%read{128,128} %write{127,127}
temp	float	$tmp83	%read{132,132} %write{128,128}
temp	float	$tmp84	%read{131,131} %write{129,129}
temp	float	$tmp85	%read{131,131} %write{130,130}
temp	float	$tmp86	%read{132,132} %write{131,131}
temp	float	$tmp87	%read{133,133} %write{132,132}
temp	int	$tmp88	%read{136,136} %write{135,135}
const	string	$const11	"camera"		%read{137,137} %write{2147483647,-1}
const	string	$const12	"world"		%read{137,142} %write{2147483647,-1}
const	int	$const13	3		%read{138,138} %write{2147483647,-1}
temp	int	$tmp89	%read{139,139} %write{138,138}
temp	int	$tmp90	%read{141,141} %write{140,140}
const	string	$const14	"object"		%read{142,142} %write{2147483647,-1}
temp	vector	$tmp91	%read{145,145} %write{144,144}
const	float	$const16	100		%read{144,144} %write{2147483647,-1}
temp	vector	$tmp92	%read{146,146} %write{145,145}
code ___main___
	assign		result tex_normal_map 	%filename{"E:/github/elaramax/Shaders/max_normal_bump.osl"} %line{46} %argrw{"wr"}
	assign		result_alpha tex_normal_map_alpha 	%line{47} %argrw{"wr"}
	eq		$tmp1 tex_map2on $const1 	%line{48} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	if		$tmp2 8 8 	%argrw{"r"}
	eq		$tmp3 tex_bump_map_isnull $const2 	%argrw{"wrr"}
	neq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 27 27 	%argrw{"r"}
	mul		result_bump tex_bump_map_bump tex_bump_spin 	%line{50} %argrw{"wrr"}
	eq		$tmp5 tex_flipred $const1 	%line{51} %argrw{"wrr"}
	if		$tmp5 15 15 	%argrw{"r"}
	compref		$tmp6 result_bump $const2 	%line{53} %argrw{"wrr"}
	sub		$tmp7 $const3 $tmp6 	%argrw{"wrr"}
	compassign	result_bump $const2 $tmp7 	%argrw{"wrr"}
	eq		$tmp8 tex_flipgreen $const1 	%line{55} %argrw{"wrr"}
	if		$tmp8 20 20 	%argrw{"r"}
	compref		$tmp9 result_bump $const1 	%line{57} %argrw{"wrr"}
	sub		$tmp10 $const3 $tmp9 	%argrw{"wrr"}
	compassign	result_bump $const1 $tmp10 	%argrw{"wrr"}
	eq		$tmp11 tex_swap_rg $const1 	%line{59} %argrw{"wrr"}
	if		$tmp11 27 27 	%argrw{"r"}
	compref		___370_t result_bump $const2 	%line{61} %argrw{"wrr"}
	compref		$tmp12 result_bump $const1 	%line{62} %argrw{"wrr"}
	compassign	result_bump $const2 $tmp12 	%argrw{"wrr"}
	compref		$tmp13 result_bump $const2 	%line{63} %argrw{"wrr"}
	compassign	result_bump $const1 $tmp13 	%argrw{"wrr"}
	eq		$tmp14 tex_map1on $const1 	%line{66} %argrw{"wrr"}
	neq		$tmp15 $tmp14 $const2 	%argrw{"wrr"}
	if		$tmp15 33 33 	%argrw{"r"}
	eq		$tmp16 tex_normal_map_isnull $const2 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const2 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	if		$tmp15 147 147 	%argrw{"r"}
	assign		___371_s tex_normal_map 	%line{68} %argrw{"wr"}
	assign		___371_texture_gamma $const3 	%line{70} %argrw{"wr"}
	getattribute	$tmp18 $const4 $const5 ___371_texture_gamma 	%line{71} %argrw{"wrrw"}
	div		$tmp19 $const3 ___371_texture_gamma 	%line{72} %argrw{"wrr"}
	functioncall	$const6 58 	%argrw{"r"}
	gt		$tmp20 $tmp19 $const7 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{416} %argrw{"wrr"}
	neq		$tmp21 $tmp20 $const2 	%argrw{"wrr"}
	if		$tmp21 45 45 	%argrw{"r"}
	neq		$tmp22 $tmp19 $const3 	%argrw{"wrr"}
	neq		$tmp23 $tmp22 $const2 	%argrw{"wrr"}
	assign		$tmp21 $tmp23 	%argrw{"wr"}
	if		$tmp21 58 58 	%argrw{"r"}
	compref		$tmp26 ___371_s $const2 	%line{418} %argrw{"wrr"}
	max		$tmp25 $tmp26 $const7 	%argrw{"wrr"}
	pow		$tmp24 $tmp25 $tmp19 	%argrw{"wrr"}
	compassign	___371_s $const2 $tmp24 	%argrw{"wrr"}
	compref		$tmp29 ___371_s $const1 	%line{419} %argrw{"wrr"}
	max		$tmp28 $tmp29 $const7 	%argrw{"wrr"}
	pow		$tmp27 $tmp28 $tmp19 	%argrw{"wrr"}
	compassign	___371_s $const1 $tmp27 	%argrw{"wrr"}
	compref		$tmp32 ___371_s $const8 	%line{420} %argrw{"wrr"}
	max		$tmp31 $tmp32 $const7 	%argrw{"wrr"}
	pow		$tmp30 $tmp31 $tmp19 	%argrw{"wrr"}
	compassign	___371_s $const8 $tmp30 	%argrw{"wrr"}
	eq		$tmp33 tex_flipred $const1 	%filename{"E:/github/elaramax/Shaders/max_normal_bump.osl"} %line{74} %argrw{"wrr"}
	if		$tmp33 63 63 	%argrw{"r"}
	compref		$tmp34 ___371_s $const2 	%line{76} %argrw{"wrr"}
	sub		$tmp35 $const3 $tmp34 	%argrw{"wrr"}
	compassign	___371_s $const2 $tmp35 	%argrw{"wrr"}
	eq		$tmp36 tex_flipgreen $const1 	%line{78} %argrw{"wrr"}
	if		$tmp36 68 68 	%argrw{"r"}
	compref		$tmp37 ___371_s $const1 	%line{80} %argrw{"wrr"}
	sub		$tmp38 $const3 $tmp37 	%argrw{"wrr"}
	compassign	___371_s $const1 $tmp38 	%argrw{"wrr"}
	eq		$tmp39 tex_swap_rg $const1 	%line{82} %argrw{"wrr"}
	if		$tmp39 75 75 	%argrw{"r"}
	compref		___374_t ___371_s $const2 	%line{84} %argrw{"wrr"}
	compref		$tmp40 ___371_s $const1 	%line{85} %argrw{"wrr"}
	compassign	___371_s $const2 $tmp40 	%argrw{"wrr"}
	compref		$tmp41 ___371_s $const2 	%line{86} %argrw{"wrr"}
	compassign	___371_s $const1 $tmp41 	%argrw{"wrr"}
	compref		$tmp42 ___371_s $const2 	%line{89} %argrw{"wrr"}
	sub		$tmp43 $tmp42 $const10 	%argrw{"wrr"}
	mul		$tmp44 $const9 $tmp43 	%argrw{"wrr"}
	compassign	___371_p $const2 $tmp44 	%argrw{"wrr"}
	compref		$tmp45 ___371_s $const1 	%line{90} %argrw{"wrr"}
	sub		$tmp46 $tmp45 $const10 	%argrw{"wrr"}
	mul		$tmp47 $const9 $tmp46 	%argrw{"wrr"}
	compassign	___371_p $const1 $tmp47 	%argrw{"wrr"}
	compref		$tmp48 ___371_s $const8 	%line{91} %argrw{"wrr"}
	sub		$tmp49 $tmp48 $const10 	%argrw{"wrr"}
	mul		$tmp50 $const9 $tmp49 	%argrw{"wrr"}
	compassign	___371_p $const8 $tmp50 	%argrw{"wrr"}
	assign		___371_frontNormal N 	%line{93} %argrw{"wr"}
	backfacing	$tmp51 	%line{94} %argrw{"w"}
	if		$tmp51 91 91 	%argrw{"r"}
	neg		___371_frontNormal ___371_frontNormal 	%line{96} %argrw{"wr"}
	eq		$tmp52 tex_method $const2 	%line{99} %argrw{"wrr"}
	if		$tmp52 135 143 	%argrw{"r"}
	compref		$tmp53 ___371_p $const1 	%line{101} %argrw{"wrr"}
	neg		$tmp54 $tmp53 	%argrw{"wr"}
	compassign	___371_p $const1 $tmp54 	%argrw{"wrr"}
	normalize	___376_tangent dPdu 	%line{102} %argrw{"wr"}
	normalize	___376_binormal dPdv 	%line{103} %argrw{"wr"}
	compref		$tmp55 ___371_p $const2 	%line{105} %argrw{"wrr"}
	compref		$tmp56 ___376_tangent $const2 	%argrw{"wrr"}
	mul		$tmp57 $tmp55 $tmp56 	%argrw{"wrr"}
	compref		$tmp58 ___371_p $const1 	%argrw{"wrr"}
	compref		$tmp59 ___376_binormal $const2 	%argrw{"wrr"}
	mul		$tmp60 $tmp58 $tmp59 	%argrw{"wrr"}
	add		$tmp61 $tmp57 $tmp60 	%argrw{"wrr"}
	compref		$tmp62 ___371_p $const8 	%argrw{"wrr"}
	compref		$tmp63 ___371_frontNormal $const2 	%argrw{"wrr"}
	mul		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	add		$tmp65 $tmp61 $tmp64 	%argrw{"wrr"}
	compassign	___376_tempNormal $const2 $tmp65 	%argrw{"wrr"}
	compref		$tmp66 ___371_p $const2 	%line{106} %argrw{"wrr"}
	compref		$tmp67 ___376_tangent $const1 	%argrw{"wrr"}
	mul		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	compref		$tmp69 ___371_p $const1 	%argrw{"wrr"}
	compref		$tmp70 ___376_binormal $const1 	%argrw{"wrr"}
	mul		$tmp71 $tmp69 $tmp70 	%argrw{"wrr"}
	add		$tmp72 $tmp68 $tmp71 	%argrw{"wrr"}
	compref		$tmp73 ___371_p $const8 	%argrw{"wrr"}
	compref		$tmp74 ___371_frontNormal $const1 	%argrw{"wrr"}
	mul		$tmp75 $tmp73 $tmp74 	%argrw{"wrr"}
	add		$tmp76 $tmp72 $tmp75 	%argrw{"wrr"}
	compassign	___376_tempNormal $const1 $tmp76 	%argrw{"wrr"}
	compref		$tmp77 ___371_p $const2 	%line{107} %argrw{"wrr"}
	compref		$tmp78 ___376_tangent $const8 	%argrw{"wrr"}
	mul		$tmp79 $tmp77 $tmp78 	%argrw{"wrr"}
	compref		$tmp80 ___371_p $const1 	%argrw{"wrr"}
	compref		$tmp81 ___376_binormal $const8 	%argrw{"wrr"}
	mul		$tmp82 $tmp80 $tmp81 	%argrw{"wrr"}
	add		$tmp83 $tmp79 $tmp82 	%argrw{"wrr"}
	compref		$tmp84 ___371_p $const8 	%argrw{"wrr"}
	compref		$tmp85 ___371_frontNormal $const8 	%argrw{"wrr"}
	mul		$tmp86 $tmp84 $tmp85 	%argrw{"wrr"}
	add		$tmp87 $tmp83 $tmp86 	%argrw{"wrr"}
	compassign	___376_tempNormal $const8 $tmp87 	%argrw{"wrr"}
	assign		___371_p ___376_tempNormal 	%line{108} %argrw{"wr"}
	eq		$tmp88 tex_method $const8 	%line{110} %argrw{"wrr"}
	if		$tmp88 138 143 	%argrw{"r"}
	transformv	___371_p $const11 $const12 ___371_p 	%line{112} %argrw{"wrrr"}
	eq		$tmp89 tex_method $const13 	%line{114} %argrw{"wrr"}
	if		$tmp89 140 143 	%argrw{"r"}
	eq		$tmp90 tex_method $const1 	%line{118} %argrw{"wrr"}
	if		$tmp90 143 143 	%argrw{"r"}
	transformv	___371_p $const14 $const12 ___371_p 	%line{120} %argrw{"wrrr"}
	sub		___371_perturb ___371_p ___371_frontNormal 	%line{123} %argrw{"wrr"}
	mul		$tmp91 $const16 ___371_perturb 	%line{124} %argrw{"wrr"}
	mul		$tmp92 $tmp91 tex_mult_spin 	%argrw{"wrr"}
	add		result_bump result_bump $tmp92 	%argrw{"wrr"}
	end
